#summary Building Pectin from source

Pectin is built using the [http://gradle.org Gradle] build system.  It's built using version 0.5.2 for which you can find the [http://www.gradle.org/userguide/0.5.2/userguide.html user guide here]. 

==Project directory structure==
The project contains two subprojects, the library itself (contained in the gwt-pectin directory) and the demo.  Building either the demo or the main library is performed from the subdirectories.

Gradle requires a number of build files (this requirement is being relaxed later versions) to operate.  In the root directory, a `build.gradle` and `settings.gradle` file provide configuration for the whole project (such as maven repositories, plugins and custom functions) while a `build.gradle` in each of the sub directories provides the main build code.  The following illustrates:

{{{
root
  - build.gradle     <- project wide configuration
  - settings.gradle  <- bulid system settings and config
  - demo
    - build.gradle   <- demo build file
  - gwt-pectin
    - build.gradle   <- main build file
}}}

==Building the jar==
To build the main jar you need to change to the gwt-pectin sub directory.

From `root/gwt-pectin`:
{{{
   ./gradlew libs  
}}}

*Note:* All the examples here are based on unix.  If you're using Windows then substitute `gradlew.bat` for `./gradlew`.


This will jar path will be `root/gwt-pectin/build/gwt-pectin-0.1.x-SNAPSHOT.jar`

If you use the release target then jar will be built without the SNAPSHOT sufix and the build number will be incremented for the next build.

{{{
   ./gradlew release 
}}}


In this case will jar path will be `root/gwt-pectin/build/gwt-pectin-0.1.x.jar`


==Running the demo==
To run the demo you need to be in the demo sub directory.

From `root/demo`:
{{{
   ./gradlew demo
}}}

If you would like the build the full demo instead of running the shell you can do the following:

From `root/demo`:
{{{
   ./gradlew dist
}}}

The compiled output can be found in`root/demo/build/web`.
